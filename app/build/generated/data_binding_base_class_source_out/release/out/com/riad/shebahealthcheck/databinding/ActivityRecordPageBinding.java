// Generated by view binder compiler. Do not edit!
package com.riad.shebahealthcheck.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.riad.shebahealthcheck.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecordPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addButton;

  @NonNull
  public final EditText bloodSugarInput;

  @NonNull
  public final EditText dateTimeInput;

  @NonNull
  public final EditText nameInput;

  @NonNull
  public final ListView recordsList;

  private ActivityRecordPageBinding(@NonNull LinearLayout rootView, @NonNull Button addButton,
      @NonNull EditText bloodSugarInput, @NonNull EditText dateTimeInput,
      @NonNull EditText nameInput, @NonNull ListView recordsList) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.bloodSugarInput = bloodSugarInput;
    this.dateTimeInput = dateTimeInput;
    this.nameInput = nameInput;
    this.recordsList = recordsList;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecordPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecordPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_record_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecordPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addButton;
      Button addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.bloodSugarInput;
      EditText bloodSugarInput = ViewBindings.findChildViewById(rootView, id);
      if (bloodSugarInput == null) {
        break missingId;
      }

      id = R.id.dateTimeInput;
      EditText dateTimeInput = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeInput == null) {
        break missingId;
      }

      id = R.id.nameInput;
      EditText nameInput = ViewBindings.findChildViewById(rootView, id);
      if (nameInput == null) {
        break missingId;
      }

      id = R.id.recordsList;
      ListView recordsList = ViewBindings.findChildViewById(rootView, id);
      if (recordsList == null) {
        break missingId;
      }

      return new ActivityRecordPageBinding((LinearLayout) rootView, addButton, bloodSugarInput,
          dateTimeInput, nameInput, recordsList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
